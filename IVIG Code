import streamlit as st
from datetime import datetime, timedelta

def ivig_calculator(start_time, total_volume, rate_schedule):
    try:
        current_time = datetime.strptime(start_time, "%H:%M")
        infused_volume = 0
        infusion_steps = []

        for rate, duration in rate_schedule:
            if infused_volume >= total_volume:
                break
            
            time_at_rate = timedelta(minutes=duration)
            volume_at_rate = (rate / 60) * duration  # Convert mL/hr to mL/min * duration
            
            if infused_volume + volume_at_rate > total_volume:
                time_needed = (total_volume - infused_volume) / (rate / 60)
                time_at_rate = timedelta(minutes=time_needed)
                volume_at_rate = total_volume - infused_volume
                
            infused_volume += volume_at_rate
            end_time = current_time + time_at_rate
            
            infusion_steps.append({
                "Rate (mL/hr)": rate,
                "Start Time": current_time.strftime("%H:%M"),
                "End Time": end_time.strftime("%H:%M"),
                "Volume Infused (mL)": round(infused_volume, 2)
            })
            
            current_time = end_time  # Move to next step

        return infusion_steps
    
    except ValueError:
        return "Invalid time format. Use HH:MM (24-hour format)."

# Streamlit UI
st.title("IVIG Infusion Calculator")

start_time = st.text_input("Enter start time (HH:MM)", "14:00")
total_volume = st.number_input("Enter total volume (mL)", min_value=1, value=400)

st.subheader("Enter Rate Schedule")
rate_schedule = []
add_more = True
while add_more:
    col1, col2 = st.columns(2)
    rate = col1.number_input("Rate (mL/hr)", min_value=1, key=f"rate_{len(rate_schedule)}")
    duration = col2.number_input("Duration (minutes)", min_value=1, key=f"duration_{len(rate_schedule)}")
    
    if st.button("Add Rate Step"):
        rate_schedule.append((rate, duration))

if st.button("Calculate Infusion Schedule"):
    schedule = ivig_calculator(start_time, total_volume, rate_schedule)
    st.write(schedule)
